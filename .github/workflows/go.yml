# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Cross-Platform Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Cross-Compile Executable
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          output_name="173go-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            output_name+=".exe"
          fi
          go build -v -o "$output_name" ./cmd/173go

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: 173go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: 173go-${{ matrix.goos }}-${{ matrix.goarch }}*
